generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_time       DateTime @db.Timestamp(6)
  end_time         DateTime @db.Timestamp(6)
  pickup_location  String?  @db.VarChar(255)
  dropoff_location String?  @db.VarChar(255)
  user_id          String   @db.Uuid
  car_id           String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  car              car      @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model car {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  make          String    @db.VarChar(255)
  model         String    @db.VarChar(255)
  year          Int?
  color         String?   @db.VarChar(20)
  license_plate String?   @db.VarChar(20)
  company_id    String    @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  booking       booking[]
  company       company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  report        report[]
  review        review[]
}

model company {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description    String?   @db.VarChar(255)
  established_on DateTime? @db.Timestamp(6)
  location       String?   @db.VarChar(255)
  contact_number String?   @db.VarChar(20)
  name           String    @db.VarChar(255)
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @default(now()) @db.Timestamp(6)
  user_id        String    @db.Uuid
  tenant_id      String    @db.VarChar(255)
  car            car[]
  user           user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model report {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  issue       String    @db.VarChar(255)
  reported_at DateTime? @db.Timestamp(6)
  resolved    Boolean?
  user_id     String    @db.Uuid
  car_id      String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  car         car       @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model review {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating     Int
  comment    String?  @db.VarChar(255)
  user_id    String   @db.Uuid
  car_id     String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  car        car      @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  company     company[]
  report      report[]
  review      review[]
}
